# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `paranoia` gem.
# Please instead update this file by running `bin/tapioca gem paranoia`.

# source://paranoia//lib/paranoia.rb#317
module ActiveRecord
  class << self
    # source://activerecord/7.0.4/lib/active_record.rb#277
    def action_on_strict_loading_violation; end

    # source://activerecord/7.0.4/lib/active_record.rb#277
    def action_on_strict_loading_violation=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#270
    def application_record_class; end

    # source://activerecord/7.0.4/lib/active_record.rb#270
    def application_record_class=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#213
    def async_query_executor; end

    # source://activerecord/7.0.4/lib/active_record.rb#213
    def async_query_executor=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#183
    def default_timezone; end

    # source://activerecord/7.0.4/lib/active_record.rb#187
    def default_timezone=(default_timezone); end

    # source://activerecord/7.0.4/lib/active_record.rb#311
    def dump_schema_after_migration; end

    # source://activerecord/7.0.4/lib/active_record.rb#311
    def dump_schema_after_migration=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#321
    def dump_schemas; end

    # source://activerecord/7.0.4/lib/active_record.rb#321
    def dump_schemas=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#357
    def eager_load!; end

    # source://activerecord/7.0.4/lib/active_record.rb#296
    def error_on_ignored_order; end

    # source://activerecord/7.0.4/lib/active_record.rb#296
    def error_on_ignored_order=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record/gem_version.rb#5
    def gem_version; end

    # source://activerecord/7.0.4/lib/active_record.rb#236
    def global_executor_concurrency; end

    # source://activerecord/7.0.4/lib/active_record.rb#228
    def global_executor_concurrency=(global_executor_concurrency); end

    # source://activerecord/7.0.4/lib/active_record.rb#216
    def global_thread_pool_async_query_executor; end

    # source://activerecord/7.0.4/lib/active_record.rb#240
    def index_nested_attribute_errors; end

    # source://activerecord/7.0.4/lib/active_record.rb#240
    def index_nested_attribute_errors=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#171
    def lazily_load_schema_cache; end

    # source://activerecord/7.0.4/lib/active_record.rb#171
    def lazily_load_schema_cache=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#180
    def legacy_connection_handling; end

    # source://activerecord/7.0.4/lib/active_record.rb#180
    def legacy_connection_handling=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#258
    def maintain_test_schema; end

    # source://activerecord/7.0.4/lib/active_record.rb#258
    def maintain_test_schema=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#340
    def query_transformers; end

    # source://activerecord/7.0.4/lib/active_record.rb#340
    def query_transformers=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#255
    def queues; end

    # source://activerecord/7.0.4/lib/active_record.rb#255
    def queues=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#200
    def reading_role; end

    # source://activerecord/7.0.4/lib/active_record.rb#200
    def reading_role=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#177
    def schema_cache_ignored_tables; end

    # source://activerecord/7.0.4/lib/active_record.rb#177
    def schema_cache_ignored_tables=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#288
    def schema_format; end

    # source://activerecord/7.0.4/lib/active_record.rb#288
    def schema_format=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#328
    def suppress_multiple_database_warning; end

    # source://activerecord/7.0.4/lib/active_record.rb#328
    def suppress_multiple_database_warning=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#302
    def timestamped_migrations; end

    # source://activerecord/7.0.4/lib/active_record.rb#302
    def timestamped_migrations=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#347
    def use_yaml_unsafe_load; end

    # source://activerecord/7.0.4/lib/active_record.rb#347
    def use_yaml_unsafe_load=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#248
    def verbose_query_logs; end

    # source://activerecord/7.0.4/lib/active_record.rb#248
    def verbose_query_logs=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#337
    def verify_foreign_keys_for_fixtures; end

    # source://activerecord/7.0.4/lib/active_record.rb#337
    def verify_foreign_keys_for_fixtures=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record/version.rb#7
    def version; end

    # source://activerecord/7.0.4/lib/active_record.rb#267
    def warn_on_records_fetched_greater_than; end

    # source://activerecord/7.0.4/lib/active_record.rb#267
    def warn_on_records_fetched_greater_than=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#197
    def writing_role; end

    # source://activerecord/7.0.4/lib/active_record.rb#197
    def writing_role=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record.rb#354
    def yaml_column_permitted_classes; end

    # source://activerecord/7.0.4/lib/active_record.rb#354
    def yaml_column_permitted_classes=(_arg0); end
  end
end

class ActiveRecord::Associations::BelongsToAssociation < ::ActiveRecord::Associations::SingularAssociation
  include ::HandleParanoiaDestroyedInBelongsToAssociation
end

class ActiveRecord::Associations::HasOneAssociation < ::ActiveRecord::Associations::SingularAssociation
  include ::HandleParanoiaDestroyedInHasOneAssociation
end

# source://paranoia//lib/paranoia.rb#245
class ActiveRecord::Base
  include ::ActiveModel::ForbiddenAttributesProtection
  include ::ActiveModel::AttributeAssignment
  include ::ActiveModel::Serialization

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
  def __callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
  def __callbacks?; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _before_commit_callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _commit_callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _create_callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _destroy_callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _find_callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _initialize_callbacks; end

  # source://activerecord/7.0.4/lib/active_record/reflection.rb#11
  def _reflections; end

  # source://activerecord/7.0.4/lib/active_record/reflection.rb#11
  def _reflections?; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _rollback_callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_before_commit_callbacks(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_commit_callbacks(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_create_callbacks(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_destroy_callbacks(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_find_callbacks(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_initialize_callbacks(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_rollback_callbacks(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_save_callbacks(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_touch_callbacks(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_update_callbacks(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_validate_callbacks(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_validation_callbacks(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _save_callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _touch_callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _update_callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _validate_callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _validation_callbacks; end

  # source://activemodel/7.0.4/lib/active_model/validations.rb#52
  def _validators; end

  # source://activemodel/7.0.4/lib/active_model/validations.rb#52
  def _validators?; end

  # source://activerecord/7.0.4/lib/active_record/reflection.rb#12
  def aggregate_reflections; end

  # source://activerecord/7.0.4/lib/active_record/reflection.rb#12
  def aggregate_reflections?; end

  # source://activemodel/7.0.4/lib/active_model/attribute_methods.rb#73
  def attribute_aliases; end

  # source://activemodel/7.0.4/lib/active_model/attribute_methods.rb#73
  def attribute_aliases?; end

  # source://activemodel/7.0.4/lib/active_model/attribute_methods.rb#74
  def attribute_method_matchers; end

  # source://activemodel/7.0.4/lib/active_model/attribute_methods.rb#74
  def attribute_method_matchers?; end

  # source://activerecord/7.0.4/lib/active_record/reflection.rb#13
  def automatic_scope_inversing; end

  # source://activerecord/7.0.4/lib/active_record/reflection.rb#13
  def automatic_scope_inversing?; end

  # source://activerecord/7.0.4/lib/active_record/integration.rb#16
  def cache_timestamp_format; end

  # source://activerecord/7.0.4/lib/active_record/integration.rb#16
  def cache_timestamp_format?; end

  # source://activerecord/7.0.4/lib/active_record/integration.rb#24
  def cache_versioning; end

  # source://activerecord/7.0.4/lib/active_record/integration.rb#24
  def cache_versioning?; end

  # source://activerecord/7.0.4/lib/active_record/integration.rb#32
  def collection_cache_versioning; end

  # source://activerecord/7.0.4/lib/active_record/integration.rb#32
  def collection_cache_versioning?; end

  # source://activerecord/7.0.4/lib/active_record/model_schema.rb#171
  def column_for_attribute(*_arg0, **_arg1, &_arg2); end

  # source://activerecord/7.0.4/lib/active_record/core.rb#74
  def default_connection_handler; end

  # source://activerecord/7.0.4/lib/active_record/core.rb#74
  def default_connection_handler?; end

  # source://activerecord/7.0.4/lib/active_record/core.rb#76
  def default_role; end

  # source://activerecord/7.0.4/lib/active_record/core.rb#76
  def default_role?; end

  # source://activerecord/7.0.4/lib/active_record/scoping/default.rb#20
  def default_scope_override; end

  # source://activerecord/7.0.4/lib/active_record/scoping/default.rb#19
  def default_scopes; end

  # source://activerecord/7.0.4/lib/active_record/core.rb#78
  def default_shard; end

  # source://activerecord/7.0.4/lib/active_record/core.rb#78
  def default_shard?; end

  # source://activerecord/7.0.4/lib/active_record/enum.rb#116
  def defined_enums; end

  # source://activerecord/7.0.4/lib/active_record/enum.rb#116
  def defined_enums?; end

  # source://activerecord/7.0.4/lib/active_record/core.rb#26
  def destroy_association_async_job; end

  # source://activerecord/7.0.4/lib/active_record/encryption/encryptable_record.rb#11
  def encrypted_attributes; end

  # source://activerecord/7.0.4/lib/active_record/encryption/encryptable_record.rb#11
  def encrypted_attributes=(_arg0); end

  # source://activerecord/7.0.4/lib/active_record/encryption/encryptable_record.rb#11
  def encrypted_attributes?; end

  # source://activemodel/7.0.4/lib/active_model/serializers/json.rb#15
  def include_root_in_json; end

  # source://activemodel/7.0.4/lib/active_model/serializers/json.rb#15
  def include_root_in_json?; end

  # source://activerecord/7.0.4/lib/active_record/locking/optimistic.rb#56
  def lock_optimistically; end

  # source://activerecord/7.0.4/lib/active_record/locking/optimistic.rb#56
  def lock_optimistically?; end

  # source://activerecord/7.0.4/lib/active_record/core.rb#20
  def logger; end

  # source://activerecord/7.0.4/lib/active_record/core.rb#20
  def logger?; end

  # source://activemodel/7.0.4/lib/active_model/naming.rb#244
  def model_name(*_arg0, **_arg1, &_arg2); end

  # source://activerecord/7.0.4/lib/active_record/nested_attributes.rb#15
  def nested_attributes_options; end

  # source://activerecord/7.0.4/lib/active_record/nested_attributes.rb#15
  def nested_attributes_options?; end

  # source://paranoia//lib/paranoia.rb#293
  def paranoid?; end

  # source://activerecord/7.0.4/lib/active_record/attribute_methods/dirty.rb#18
  def partial_inserts; end

  # source://activerecord/7.0.4/lib/active_record/attribute_methods/dirty.rb#18
  def partial_inserts?; end

  # source://activerecord/7.0.4/lib/active_record/attribute_methods/dirty.rb#17
  def partial_updates; end

  # source://activerecord/7.0.4/lib/active_record/attribute_methods/dirty.rb#17
  def partial_updates?; end

  # source://activerecord/7.0.4/lib/active_record/model_schema.rb#156
  def pluralize_table_names; end

  # source://activerecord/7.0.4/lib/active_record/model_schema.rb#156
  def pluralize_table_names?; end

  # source://activerecord/7.0.4/lib/active_record/model_schema.rb#151
  def primary_key_prefix_type; end

  # source://activerecord/7.0.4/lib/active_record/model_schema.rb#151
  def primary_key_prefix_type?; end

  # source://activerecord/7.0.4/lib/active_record/timestamp.rb#47
  def record_timestamps; end

  # source://activerecord/7.0.4/lib/active_record/timestamp.rb#47
  def record_timestamps=(_arg0); end

  # source://activerecord/7.0.4/lib/active_record/timestamp.rb#47
  def record_timestamps?; end

  # source://activerecord/7.0.4/lib/active_record/signed_id.rb#13
  def signed_id_verifier_secret; end

  # source://activerecord/7.0.4/lib/active_record/signed_id.rb#13
  def signed_id_verifier_secret?; end

  # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#71
  def skip_time_zone_conversion_for_attributes; end

  # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#71
  def skip_time_zone_conversion_for_attributes?; end

  # source://activerecord/7.0.4/lib/active_record/inheritance.rb#42
  def store_full_class_name; end

  # source://activerecord/7.0.4/lib/active_record/inheritance.rb#42
  def store_full_class_name?; end

  # source://activerecord/7.0.4/lib/active_record/inheritance.rb#46
  def store_full_sti_class; end

  # source://activerecord/7.0.4/lib/active_record/inheritance.rb#46
  def store_full_sti_class?; end

  # source://activerecord/7.0.4/lib/active_record/model_schema.rb#152
  def table_name_prefix; end

  # source://activerecord/7.0.4/lib/active_record/model_schema.rb#152
  def table_name_prefix?; end

  # source://activerecord/7.0.4/lib/active_record/model_schema.rb#153
  def table_name_suffix; end

  # source://activerecord/7.0.4/lib/active_record/model_schema.rb#153
  def table_name_suffix?; end

  # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#70
  def time_zone_aware_attributes; end

  # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#70
  def time_zone_aware_attributes?; end

  # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#72
  def time_zone_aware_types; end

  # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#72
  def time_zone_aware_types?; end

  # source://delayed_job/4.1.10/lib/delayed/serialization/active_record.rb#12
  def to_yaml_properties; end

  # source://activerecord/7.0.4/lib/active_record/model_schema.rb#171
  def type_for_attribute(*_arg0, **_arg1, &_arg2); end

  # source://activemodel/7.0.4/lib/active_model/validations.rb#48
  def validation_context; end

  private

  # source://paranoia//lib/paranoia.rb#309
  def deletion_time; end

  # source://paranoia//lib/paranoia.rb#297
  def paranoia_column; end

  # source://paranoia//lib/paranoia.rb#301
  def paranoia_column_value; end

  # source://paranoia//lib/paranoia.rb#305
  def paranoia_sentinel_value; end

  # source://activemodel/7.0.4/lib/active_model/validations.rb#48
  def validation_context=(_arg0); end

  class << self
    # source://paranoia//lib/paranoia.rb#283
    def I_AM_THE_DESTROYER!; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks?; end

    # source://activerecord/7.0.4/lib/active_record/readonly_attributes.rb#8
    def _attr_readonly; end

    # source://activerecord/7.0.4/lib/active_record/readonly_attributes.rb#8
    def _attr_readonly=(value); end

    # source://activerecord/7.0.4/lib/active_record/readonly_attributes.rb#8
    def _attr_readonly?; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _before_commit_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _before_commit_callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _commit_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _commit_callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _create_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _create_callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _destroy_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _destroy_callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _find_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _find_callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _initialize_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _initialize_callbacks=(value); end

    # source://activerecord/7.0.4/lib/active_record/reflection.rb#11
    def _reflections; end

    # source://activerecord/7.0.4/lib/active_record/reflection.rb#11
    def _reflections=(value); end

    # source://activerecord/7.0.4/lib/active_record/reflection.rb#11
    def _reflections?; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _rollback_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _rollback_callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _save_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _save_callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _touch_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _touch_callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _update_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _update_callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _validate_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _validate_callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _validation_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _validation_callbacks=(value); end

    # source://activemodel/7.0.4/lib/active_model/validations.rb#52
    def _validators; end

    # source://activemodel/7.0.4/lib/active_model/validations.rb#52
    def _validators=(value); end

    # source://activemodel/7.0.4/lib/active_model/validations.rb#52
    def _validators?; end

    # source://paranoia//lib/paranoia.rb#246
    def acts_as_paranoid(options = T.unsafe(nil)); end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#144
    def after_create(*args, **options, &block); end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#144
    def after_destroy(*args, **options, &block); end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#144
    def after_find(*args, **options, &block); end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#144
    def after_initialize(*args, **options, &block); end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#144
    def after_save(*args, **options, &block); end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#144
    def after_touch(*args, **options, &block); end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#144
    def after_update(*args, **options, &block); end

    # source://activerecord/7.0.4/lib/active_record/reflection.rb#12
    def aggregate_reflections; end

    # source://activerecord/7.0.4/lib/active_record/reflection.rb#12
    def aggregate_reflections=(value); end

    # source://activerecord/7.0.4/lib/active_record/reflection.rb#12
    def aggregate_reflections?; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#82
    def application_record_class?; end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#137
    def around_create(*args, **options, &block); end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#137
    def around_destroy(*args, **options, &block); end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#137
    def around_save(*args, **options, &block); end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#137
    def around_update(*args, **options, &block); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#129
    def asynchronous_queries_session; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#133
    def asynchronous_queries_tracker; end

    # source://activemodel/7.0.4/lib/active_model/attribute_methods.rb#73
    def attribute_aliases; end

    # source://activemodel/7.0.4/lib/active_model/attribute_methods.rb#73
    def attribute_aliases=(value); end

    # source://activemodel/7.0.4/lib/active_model/attribute_methods.rb#73
    def attribute_aliases?; end

    # source://activemodel/7.0.4/lib/active_model/attribute_methods.rb#74
    def attribute_method_matchers; end

    # source://activemodel/7.0.4/lib/active_model/attribute_methods.rb#74
    def attribute_method_matchers=(value); end

    # source://activemodel/7.0.4/lib/active_model/attribute_methods.rb#74
    def attribute_method_matchers?; end

    # source://activerecord/7.0.4/lib/active_record/attributes.rb#11
    def attributes_to_define_after_schema_loads; end

    # source://activerecord/7.0.4/lib/active_record/attributes.rb#11
    def attributes_to_define_after_schema_loads=(value); end

    # source://activerecord/7.0.4/lib/active_record/attributes.rb#11
    def attributes_to_define_after_schema_loads?; end

    # source://activerecord/7.0.4/lib/active_record/reflection.rb#13
    def automatic_scope_inversing; end

    # source://activerecord/7.0.4/lib/active_record/reflection.rb#13
    def automatic_scope_inversing=(value); end

    # source://activerecord/7.0.4/lib/active_record/reflection.rb#13
    def automatic_scope_inversing?; end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#130
    def before_create(*args, **options, &block); end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#130
    def before_destroy(*args, **options, &block); end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#130
    def before_save(*args, **options, &block); end

    # source://activemodel/7.0.4/lib/active_model/callbacks.rb#130
    def before_update(*args, **options, &block); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#68
    def belongs_to_required_by_default; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#68
    def belongs_to_required_by_default=(value); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#68
    def belongs_to_required_by_default?; end

    # source://activerecord/7.0.4/lib/active_record/integration.rb#16
    def cache_timestamp_format; end

    # source://activerecord/7.0.4/lib/active_record/integration.rb#16
    def cache_timestamp_format=(value); end

    # source://activerecord/7.0.4/lib/active_record/integration.rb#16
    def cache_timestamp_format?; end

    # source://activerecord/7.0.4/lib/active_record/integration.rb#24
    def cache_versioning; end

    # source://activerecord/7.0.4/lib/active_record/integration.rb#24
    def cache_versioning=(value); end

    # source://activerecord/7.0.4/lib/active_record/integration.rb#24
    def cache_versioning?; end

    # source://activerecord/7.0.4/lib/active_record/integration.rb#32
    def collection_cache_versioning; end

    # source://activerecord/7.0.4/lib/active_record/integration.rb#32
    def collection_cache_versioning=(value); end

    # source://activerecord/7.0.4/lib/active_record/integration.rb#32
    def collection_cache_versioning?; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#56
    def configurations; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#50
    def configurations=(config); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#201
    def connected_to_stack; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#215
    def connection_class; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#211
    def connection_class=(b); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#219
    def connection_class?; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#223
    def connection_class_for_self; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#94
    def connection_handler; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#98
    def connection_handler=(handler); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#102
    def connection_handlers; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#111
    def connection_handlers=(handlers); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#188
    def current_preventing_writes; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#147
    def current_role; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#169
    def current_shard; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#74
    def default_connection_handler; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#74
    def default_connection_handler=(value); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#74
    def default_connection_handler?; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#76
    def default_role; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#76
    def default_role=(value); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#76
    def default_role?; end

    # source://activerecord/7.0.4/lib/active_record/scoping/default.rb#20
    def default_scope_override; end

    # source://activerecord/7.0.4/lib/active_record/scoping/default.rb#20
    def default_scope_override=(value); end

    # source://activerecord/7.0.4/lib/active_record/scoping/default.rb#19
    def default_scopes; end

    # source://activerecord/7.0.4/lib/active_record/scoping/default.rb#19
    def default_scopes=(value); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#78
    def default_shard; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#78
    def default_shard=(value); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#78
    def default_shard?; end

    # source://activerecord/7.0.4/lib/active_record/enum.rb#116
    def defined_enums; end

    # source://activerecord/7.0.4/lib/active_record/enum.rb#116
    def defined_enums=(value); end

    # source://activerecord/7.0.4/lib/active_record/enum.rb#116
    def defined_enums?; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#26
    def destroy_association_async_job; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#26
    def destroy_association_async_job=(value); end

    # source://activerecord/7.0.4/lib/active_record/encryption/encryptable_record.rb#11
    def encrypted_attributes; end

    # source://activerecord/7.0.4/lib/active_record/encryption/encryptable_record.rb#11
    def encrypted_attributes=(value); end

    # source://activerecord/7.0.4/lib/active_record/encryption/encryptable_record.rb#11
    def encrypted_attributes?; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#66
    def enumerate_columns_in_select_statements; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#66
    def enumerate_columns_in_select_statements=(value); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#66
    def enumerate_columns_in_select_statements?; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#72
    def has_many_inversing; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#72
    def has_many_inversing=(value); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#72
    def has_many_inversing?; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#158
    def immutable_strings_by_default; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#158
    def immutable_strings_by_default=(value); end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#158
    def immutable_strings_by_default?; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#157
    def implicit_order_column; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#157
    def implicit_order_column=(value); end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#157
    def implicit_order_column?; end

    # source://activemodel/7.0.4/lib/active_model/serializers/json.rb#15
    def include_root_in_json; end

    # source://activemodel/7.0.4/lib/active_model/serializers/json.rb#15
    def include_root_in_json=(value); end

    # source://activemodel/7.0.4/lib/active_model/serializers/json.rb#15
    def include_root_in_json?; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#160
    def inheritance_column; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#311
    def inheritance_column=(value); end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#160
    def inheritance_column?; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#155
    def internal_metadata_table_name; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#155
    def internal_metadata_table_name=(value); end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#155
    def internal_metadata_table_name?; end

    # source://activerecord/7.0.4/lib/active_record/store.rb#99
    def local_stored_attributes; end

    # source://activerecord/7.0.4/lib/active_record/store.rb#99
    def local_stored_attributes=(_arg0); end

    # source://activerecord/7.0.4/lib/active_record/locking/optimistic.rb#56
    def lock_optimistically; end

    # source://activerecord/7.0.4/lib/active_record/locking/optimistic.rb#56
    def lock_optimistically=(value); end

    # source://activerecord/7.0.4/lib/active_record/locking/optimistic.rb#56
    def lock_optimistically?; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#20
    def logger; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#20
    def logger=(value); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#20
    def logger?; end

    # source://activerecord/7.0.4/lib/active_record/nested_attributes.rb#15
    def nested_attributes_options; end

    # source://activerecord/7.0.4/lib/active_record/nested_attributes.rb#15
    def nested_attributes_options=(value); end

    # source://activerecord/7.0.4/lib/active_record/nested_attributes.rb#15
    def nested_attributes_options?; end

    # source://paranoia//lib/paranoia.rb#292
    def paranoid?; end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/dirty.rb#18
    def partial_inserts; end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/dirty.rb#18
    def partial_inserts=(value); end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/dirty.rb#18
    def partial_inserts?; end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/dirty.rb#17
    def partial_updates; end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/dirty.rb#17
    def partial_updates=(value); end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/dirty.rb#17
    def partial_updates?; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#156
    def pluralize_table_names; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#156
    def pluralize_table_names=(value); end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#156
    def pluralize_table_names?; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#151
    def primary_key_prefix_type; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#151
    def primary_key_prefix_type=(value); end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#151
    def primary_key_prefix_type?; end

    # source://activerecord/7.0.4/lib/active_record/timestamp.rb#47
    def record_timestamps; end

    # source://activerecord/7.0.4/lib/active_record/timestamp.rb#47
    def record_timestamps=(value); end

    # source://activerecord/7.0.4/lib/active_record/timestamp.rb#47
    def record_timestamps?; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#154
    def schema_migrations_table_name; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#154
    def schema_migrations_table_name=(value); end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#154
    def schema_migrations_table_name?; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#80
    def shard_selector; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#80
    def shard_selector=(value); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#80
    def shard_selector?; end

    # source://activerecord/7.0.4/lib/active_record/signed_id.rb#13
    def signed_id_verifier_secret; end

    # source://activerecord/7.0.4/lib/active_record/signed_id.rb#13
    def signed_id_verifier_secret=(value); end

    # source://activerecord/7.0.4/lib/active_record/signed_id.rb#13
    def signed_id_verifier_secret?; end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#71
    def skip_time_zone_conversion_for_attributes; end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#71
    def skip_time_zone_conversion_for_attributes=(value); end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#71
    def skip_time_zone_conversion_for_attributes?; end

    # source://activerecord/7.0.4/lib/active_record/inheritance.rb#42
    def store_full_class_name; end

    # source://activerecord/7.0.4/lib/active_record/inheritance.rb#42
    def store_full_class_name=(value); end

    # source://activerecord/7.0.4/lib/active_record/inheritance.rb#42
    def store_full_class_name?; end

    # source://activerecord/7.0.4/lib/active_record/inheritance.rb#46
    def store_full_sti_class; end

    # source://activerecord/7.0.4/lib/active_record/inheritance.rb#46
    def store_full_sti_class=(value); end

    # source://activerecord/7.0.4/lib/active_record/inheritance.rb#46
    def store_full_sti_class?; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#70
    def strict_loading_by_default; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#70
    def strict_loading_by_default=(value); end

    # source://activerecord/7.0.4/lib/active_record/core.rb#70
    def strict_loading_by_default?; end

    # source://activerecord/7.0.4/lib/active_record/core.rb#238
    def strict_loading_violation!(owner:, reflection:); end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#152
    def table_name_prefix; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#152
    def table_name_prefix=(value); end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#152
    def table_name_prefix?; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#153
    def table_name_suffix; end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#153
    def table_name_suffix=(value); end

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#153
    def table_name_suffix?; end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#70
    def time_zone_aware_attributes; end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#70
    def time_zone_aware_attributes=(value); end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#70
    def time_zone_aware_attributes?; end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#72
    def time_zone_aware_types; end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#72
    def time_zone_aware_types=(value); end

    # source://activerecord/7.0.4/lib/active_record/attribute_methods/time_zone_conversion.rb#72
    def time_zone_aware_types?; end

    # source://delayed_job/4.1.10/lib/delayed/serialization/active_record.rb#6
    def yaml_new(klass, _tag, val); end

    private

    # source://activerecord/7.0.4/lib/active_record/model_schema.rb#160
    def _inheritance_column=(value); end
  end
end

# source://orm_adapter/0.5.0/lib/orm_adapter/adapters/active_record.rb#81
ActiveRecord::Base::OrmAdapter = OrmAdapter::ActiveRecord

# source://activerecord/7.0.4/lib/active_record/errors.rb#347
ActiveRecord::UnknownAttributeError = ActiveModel::UnknownAttributeError

# source://paranoia//lib/paranoia.rb#318
module ActiveRecord::Validations
  include GeneratedInstanceMethods
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::ActiveModel::Validations

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveModel::Validations::ClassMethods
  mixes_in_class_methods ::ActiveModel::Callbacks
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker
  mixes_in_class_methods ::ActiveModel::Translation
  mixes_in_class_methods ::ActiveModel::Validations::HelperMethods
  mixes_in_class_methods ::ActiveRecord::Validations::ClassMethods

  # source://activerecord/7.0.4/lib/active_record/validations.rb#46
  def save(**options); end

  # source://activerecord/7.0.4/lib/active_record/validations.rb#52
  def save!(**options); end

  # source://activerecord/7.0.4/lib/active_record/validations.rb#66
  def valid?(context = T.unsafe(nil)); end

  # source://activerecord/7.0.4/lib/active_record/validations.rb#66
  def validate(context = T.unsafe(nil)); end

  private

  # source://activerecord/7.0.4/lib/active_record/validations.rb#75
  def default_validation_context; end

  # source://activerecord/7.0.4/lib/active_record/validations.rb#83
  def perform_validations(options = T.unsafe(nil)); end

  # source://activerecord/7.0.4/lib/active_record/validations.rb#79
  def raise_validation_error; end

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
    def _validators; end
    def _validators=(value); end
    def _validators?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
    def _validators; end
    def _validators?; end
  end
end

# source://paranoia//lib/paranoia.rb#336
class ActiveRecord::Validations::AssociationNotSoftDestroyedValidator < ::ActiveModel::EachValidator
  # source://paranoia//lib/paranoia.rb#337
  def validate_each(record, attribute, value); end
end

# source://paranoia//lib/paranoia.rb#319
module ActiveRecord::Validations::UniquenessParanoiaValidator
  # source://paranoia//lib/paranoia.rb#320
  def build_relation(klass, *args); end
end

# source://paranoia//lib/paranoia.rb#332
class ActiveRecord::Validations::UniquenessValidator < ::ActiveModel::EachValidator
  include ::ActiveRecord::Validations::UniquenessParanoiaValidator

  # source://activerecord/7.0.4/lib/active_record/validations/uniqueness.rb#6
  def initialize(options); end

  # source://paranoia//lib/paranoia.rb#320
  def build_relation(klass, *args); end

  # source://activerecord/7.0.4/lib/active_record/validations/uniqueness.rb#19
  def validate_each(record, attribute, value); end

  private

  # source://activerecord/7.0.4/lib/active_record/validations/uniqueness.rb#57
  def find_finder_class_for(record); end

  # source://activerecord/7.0.4/lib/active_record/validations/uniqueness.rb#98
  def map_enum_attribute(klass, attribute, value); end

  # source://activerecord/7.0.4/lib/active_record/validations/uniqueness.rb#85
  def scope_relation(record, relation); end
end

# source://paranoia//lib/paranoia/active_record_5_2.rb#1
module HandleParanoiaDestroyedInBelongsToAssociation
  # source://paranoia//lib/paranoia/active_record_5_2.rb#2
  def handle_dependency; end
end

# source://paranoia//lib/paranoia/active_record_5_2.rb#19
module HandleParanoiaDestroyedInHasOneAssociation
  # source://paranoia//lib/paranoia/active_record_5_2.rb#20
  def delete(method = T.unsafe(nil)); end
end

# source://paranoia//lib/paranoia.rb#8
module Paranoia
  mixes_in_class_methods ::Paranoia::Query

  # @raise [ActiveRecord::ReadOnlyRecord]
  #
  # source://paranoia//lib/paranoia.rb#91
  def delete; end

  # @return [Boolean]
  #
  # source://paranoia//lib/paranoia.rb#142
  def deleted?; end

  # source://paranoia//lib/paranoia.rb#60
  def destroy; end

  # source://paranoia//lib/paranoia.rb#131
  def get_recovery_window_range(opts); end

  # @raise [ActiveRecord::ReadOnlyRecord]
  #
  # source://paranoia//lib/paranoia.rb#91
  def paranoia_delete; end

  # source://paranoia//lib/paranoia.rb#60
  def paranoia_destroy; end

  # source://paranoia//lib/paranoia.rb#82
  def paranoia_destroy!; end

  # @return [Boolean]
  #
  # source://paranoia//lib/paranoia.rb#142
  def paranoia_destroyed?; end

  # source://paranoia//lib/paranoia.rb#147
  def really_destroy!; end

  # source://paranoia//lib/paranoia.rb#105
  def restore(opts = T.unsafe(nil)); end

  # source://paranoia//lib/paranoia.rb#105
  def restore!(opts = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://paranoia//lib/paranoia.rb#87
  def trigger_transactional_callbacks?; end

  # @return [Boolean]
  #
  # source://paranoia//lib/paranoia.rb#137
  def within_recovery_window?(recovery_window_range); end

  private

  # source://paranoia//lib/paranoia.rb#174
  def each_counter_cached_associations; end

  # source://paranoia//lib/paranoia.rb#184
  def paranoia_destroy_attributes; end

  # source://paranoia//lib/paranoia.rb#178
  def paranoia_restore_attributes; end

  # restore associated records that have been soft deleted when
  # we called #destroy
  #
  # source://paranoia//lib/paranoia.rb#196
  def restore_associated_records(recovery_window_range = T.unsafe(nil)); end

  # source://paranoia//lib/paranoia.rb#190
  def timestamp_attributes_with_current_time; end

  class << self
    # source://paranoia//lib/paranoia.rb#16
    def default_sentinel_value; end

    # Change default_sentinel_value in a rails initializer
    #
    # source://paranoia//lib/paranoia.rb#12
    def default_sentinel_value=(val); end

    # @private
    #
    # source://paranoia//lib/paranoia.rb#20
    def included(klazz); end
  end
end

# source://paranoia//lib/paranoia.rb#24
module Paranoia::Query
  # source://paranoia//lib/paranoia.rb#34
  def deleted; end

  # source://paranoia//lib/paranoia.rb#34
  def only_deleted; end

  # @return [Boolean]
  #
  # source://paranoia//lib/paranoia.rb#25
  def paranoid?; end

  # source://paranoia//lib/paranoia.rb#48
  def restore(id_or_ids, opts = T.unsafe(nil)); end

  # source://paranoia//lib/paranoia.rb#27
  def with_deleted; end
end
